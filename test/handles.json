{
    "Tests":[
        {
            "Convey":"We can create a new handle",
            "Zome": "clutter",
            "FnName": "newHandle",
            "Input": "buffaloBill",
            "Output": "%h2%",
            "Exposure":"public",
            "Err": "",
            "Regexp": ""
        },
        {
            "Convey":"We can retrieve the new handle",
            "Zome": "clutter",
            "FnName": "getHandle",
            "Input": "%key%",
            "Output": "buffaloBill",
            "Exposure":"public",
            "Err": "",
            "Regexp": ""
        },
        {
            "Convey":"We can update our handle to a unique handle",
            "Zome": "clutter",
            "FnName": "newHandle",
            "Input": "phil",
            "Output": "%h2%",
            "Exposure":"public",
            "Err": "",
            "Regexp": ""
        },
        {
            "Convey":"Trying to use a handle that another person is using returns 'HandleInUse'",
            "Zome": "clutter",
            "FnName": "newHandle",
            "Input": "phil",
            "Output": "HandleInUse",
            "Exposure":"public",
            "Err": "",
            "Regexp": ""
        },
        {
            "Convey":"getAgent request on non existent handle returns empty string",
            "Zome": "clutter",
            "FnName": "getAgent",
            "Input": "fooHandle",
            "Output": "",
            "Exposure":"public",
            "Err": "",
            "Regexp": ""
        },
        {
            "Convey":"We can retrieve agent by handle",
            "Zome": "clutter",
            "FnName": "getAgent",
            "Input": "buffaloBill",
            "Output": "%key%",
            "Exposure":"public",
            "Err": "",
            "Regexp": ""
        },
        {
            "Convey":"We can retrieve a list of all handles",
            "Zome": "clutter",
            "FnName": "getHandles",
            "Input": "",
            "Output": {"%key%":"%h4%"},
            "Exposure":"public",
            "Err": "",
            "Regexp": ""
        }
    ]
}
